{"uid":"f1d865766405ebc2","name":"test_api[第二个post请求-POST-{'Contet-Type':'application/json'}-{'name':'hbt','password':'123456'}-测试通过]","fullName":"test_api#test_api","historyId":"9f299694c8bf57adce342108b4076022","time":{"start":1670329380741,"stop":1670329380793,"duration":52},"status":"failed","statusMessage":"AssertionError: assert 405 == 200","statusTrace":"description = '第二个post请求', method = 'POST', header = \"{'Contet-Type':'application/json'}\", args = \"{'name':'hbt','password':'123456'}\", expect = '测试通过'\n\n    @allure.feature(\"用户登录功能测试\")\n    @allure.story(\"get和post请求\")\n    @pytest.mark.parametrize((\"description\",\"method\",\"header\",\"args\",\"expect\"),data)\n    def test_api(description,method,header,args,expect):\n        url=ReadFileData().load_ini('..\\config\\\\setting.ini')['host']['api_url']\n        # logger.info(\"开始执行用例{}\".format(description))\n        response=requests.request(method,url)\n        status=response.status_code\n>       assert status==200\nE       assert 405 == 200\n\ntest_api.py:22: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 405 == 200","statusTrace":"description = '第二个post请求', method = 'POST', header = \"{'Contet-Type':'application/json'}\", args = \"{'name':'hbt','password':'123456'}\", expect = '测试通过'\n\n    @allure.feature(\"用户登录功能测试\")\n    @allure.story(\"get和post请求\")\n    @pytest.mark.parametrize((\"description\",\"method\",\"header\",\"args\",\"expect\"),data)\n    def test_api(description,method,header,args,expect):\n        url=ReadFileData().load_ini('..\\config\\\\setting.ini')['host']['api_url']\n        # logger.info(\"开始执行用例{}\".format(description))\n        response=requests.request(method,url)\n        status=response.status_code\n>       assert status==200\nE       assert 405 == 200\n\ntest_api.py:22: AssertionError","steps":[],"attachments":[{"uid":"d06aead9fc9adbba","name":"log","source":"d06aead9fc9adbba.txt","type":"text/plain","size":411}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[],"labels":[{"name":"story","value":"get和post请求"},{"name":"feature","value":"用户登录功能测试"},{"name":"suite","value":"test_api"},{"name":"host","value":"DESKTOP-CUJVB2E"},{"name":"thread","value":"4264-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"args","value":"'{'name':'hbt','password':'123456'}'"},{"name":"description","value":"'第二个post请求'"},{"name":"expect","value":"'测试通过'"},{"name":"header","value":"'{'Contet-Type':'application/json'}'"},{"name":"method","value":"'POST'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f1d865766405ebc2.json","parameterValues":["'{'name':'hbt','password':'123456'}'","'第二个post请求'","'测试通过'","'{'Contet-Type':'application/json'}'","'POST'"]}